worker_processes auto;

events {
    worker_connections 512;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    # server {
    #     listen 8080; # Nginx typically runs on port 8080 within the container in S2I environments
    #     server_name localhost;

    #     root /opt/app-root/src; # This is the common location where S2I places your source files

    #     location / {
    #         index index.html index.htm;
    #         try_files $uri $uri/ =404;
    #     }

    #     # Example for a simple health check endpoint
    #     location /healthz {
    #         access_log off;
    #         add_header Content-Type text/plain;
    #         return 200 "OK";
    #     }
    # }

    # Upstream group of backend servers.
    # Nginx will distribute requests among these servers.
    upstream my_backends {
        # Backend server 1 with health checks.
        # max_fails=3: If Nginx fails to connect to this server 3 times...
        # fail_timeout=30s: ...within a 30-second period, it will be marked as down for 30 seconds.
        server petclinic.pc.svc.cluster.local:8080 max_fails=3 fail_timeout=30s;

        # Backend server 2 with health checks.
        #server backend2.example.com:8080 max_fails=3 fail_timeout=30s;
    }

    # The main server block that handles incoming requests.
    server {
        # Listens on port 80 for incoming connections.
        listen 8080;
        server_name petclinic-proxy.apps.prime.pitt.ca; # Replace with your domain

        # The location block for the root URL (/).
        # All requests to this server will be handled by this block.
        location / {
            # Forwards requests to the 'my_backends' upstream group.
            proxy_pass http://my_backends;

            # Defines conditions under which a request should be passed to the next server.
            # This is crucial for failover.
            proxy_next_upstream error timeout http_502 http_503 http_504;

            # Sets headers to be passed to the backend servers.
            # These headers provide the backend with information about the original request.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Recommended for WebSocket support
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        # }
    }
}