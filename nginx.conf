worker_processes auto;

events {
    worker_connections 512;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    # The resolver is now used by the `resolve` flag in the upstream block.
    resolver 1.1.1.1 8.8.8.8 valid=60s;

    upstream backends {
        # Backend server 1 with health checks.
        # max_fails=3: If Nginx fails to connect to this server 3 times...
        # fail_timeout=30s: ...within a 30-second period, it will be marked as down for 30 seconds.
        #server petclinic.pc.svc.cluster.local:8080 max_fails=3 fail_timeout=30s;

        # Backend server 2 with health checks.
        server petclinic-frontend.apps.dev.pitt.ca:443;
    }

    # The main server block that handles incoming requests.
    server {
        # Listens on port 80 for incoming connections.
        listen 8080;
        server_name petclinic-proxy.apps.prime.pitt.ca; # Replace with your domain

        # The location block for the root URL (/).
        # All requests to this server will be handled by this block.
        location / {
            # Forwards requests to the 'my_backends' upstream group.
            proxy_pass https://backends/;

            # Set headers to pass along client information to the proxy
            proxy_set_header Host $host; # Use $host to pass the original host header
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Recommended for better performance and reliability
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # Increase timeouts if the external API can be slow
            proxy_connect_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
}